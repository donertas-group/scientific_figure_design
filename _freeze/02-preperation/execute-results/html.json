{
  "hash": "3f17c94361297c51d6dba918f1c82156",
  "result": {
    "markdown": "# Setup\n\n\n\n\n\n## Libraries\n\nThere are a few libraries that we recommend using:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Includes ggplot2 + other data wrangling packages\nlibrary(ggpubr) # Publication-ready figures & ggpubr theme\nlibrary(ggthemes) # Additional themes for ggplot2\nlibrary(viridis) # Viridis color palette\nlibrary(colorspace) # For color manipulation\nlibrary(ggforce) # Additional geoms\nlibrary(hexbin) # For hexbin plots\nlibrary(ggridges) # For creating ridgeline plots\nlibrary(gridExtra) # Helps in arranging ggplot2 graphs (inset graphs)\nlibrary(GGally) # Includes ggpairs and other useful functions\n```\n:::\n\n\n## Theme\n\nA predefined theme is recommended for all plots within a given project, publication, or presentation to ensure consistency. You can set a default theme using the syntax below:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntheme_set(theme_pubr(base_size = 10, legend = 'bottom'))\n```\n:::\n\n\nIn this example, we set the default theme to `theme_pubr` from the `ggpubr` package. This theme has a clean appearance and suitabile for publications. You can modify it on a per-plot basis or include additional arguments for global settings. For a different style, particularly one with panel grid lines, the `theme_bw` from the `ggplot2` package can be used:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntheme_set(theme_bw(base_size = 10))\n```\n:::\n\n\nThe `base_size` argument sets a base font size for all figures, a useful feature for ensuring consistency, especially in publications.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}